#include <iostream>
#include <limits.h>
using namespace std;

int binarySearch( int arr[], int n , int key){

  int start = 0;
  int end = n-1;
  int mid = start + (end-start)/2; 
  /* <==  (start + mid)/2
  using this formula we  might take the mid out of range 
  (2^30-1) therefore we used an optimised formula*/

  while(start <= end){

    if(arr[mid]==key){
      return mid;
    }

    if(key > arr[mid]){
      start = mid + 1;
    }
    else{
      end = mid -  1;
    }
    mid = start + (end-start)/2;    
  }

  return -1;
  
}


int main(){

  int even[6]= {2,4,6,8,12,18};
  int odd[5]= {3,8,11,14,16};
  int oddIndex = binarySearch(even, 6, 12);
  int evenIndex = binarySearch(even, 6, 8);

  cout<<"The index key for 12 is : "<<oddIndex<<endl;
  cout<<"The index key for  8 is : "<<evenIndex<<endl;
  
  
  
}
